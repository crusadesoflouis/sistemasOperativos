1) cambio de contexto

proceso que se esta ejecuntando
guardar registros, eip,ebp recursos que esta usando flags,variables locales

2) pcb process control block el que tenia los estados de las tablas

function contexChanged

a)
pcb1.r0 = r0
..
pcb1.r15 = r15
pcb1.stat = ke_ready
pcb1.cpu time = cpu time + current user time
pcb1.pc = eip
r0 = pcb2.r15
..
..
r15 = pcb2.r15

set_current_process(pcb2.pid)
call ke_reset:current_user_time
push pcb2.pc()
ret

b)esta todo ok


3) la diferencia es que, una syscall requiere la intervencion del sistema operativo para funcionar
en cambio una llamada a una funcion de una libreria, no necesariamente tiene que llamar al sistema
operativo para funcionar.

4)esqueduler maneja todo, el proceso transita estos estados, los recursos pueden hacerse transisionar hacia los estados blcked




7) ver el tema de posibles conflictos

a) tiki y taka  deberian ser variables en el espacio compartido
b) temp no necesita ser compartida
c)
void taka_runner (){}
void tiki_taka() {}
	int tiki;
	int taka;
	share_mem(tiki);
	share_mem(taka);


	int takaProcess = fork();
	if (takaProcess == 0 ) {
			taka_runner();
	}
	else{
		tiki_taka();
}

8)

a)
int contador = 0;
int padre = getCurrentID();
int hijo = fork();
  if (hijo != 0 ){
	contador = brecieve(hijo);
	contador = contador + 1;
    	bsend(hijo,get_current_pid());
	bsend(hijo,contador);
    }
  else{
	contador = brecieve(padre);
	contador = contador +1;
	bsend(padre, get_current_pid());
	bsend(padre,contador());

  }


b)

(shared) int counter = 0;

int padre = getCurrentID();
int ready_1 = False;
int ready_2 = False;
int hijo_0 = fork();

		if ( hijo_0 == 0 ){
			while(ready_2){
				write (counter);
				counter += 1;
				}
			}
		}
		else{
			int hijo_1 = fork ()
					if(hijo_1 == 0){
					 while (ready_1){
						 write (counter);
						 counter += 1;
						 ready_2 = True;
					 }
					}
					else{
					ready_1 = True;
					}
}



9)
a) deberian empezar defasados para que puedan funcionar ? porque el izquierdo espera a que procese el derecho
pero el derecho tiene que esperara tener el resultado despues de ejecutarse una vez el computo muy dificil 2

b) podria agregarse una espera o una señal para que procese despues de un rato la señal.. hay que ver


10)

a)se podrian ejecutar los dos en paralelo y con memoria compartida porque en teoria los ojos estan lejos del borde
pero podria el caso de que una foto sea medio cortada y se choquen al querer modificar un ojo en el borde


b) lo dice en el enunciado, con pasaje de mensaje

c) WAT?


11)
